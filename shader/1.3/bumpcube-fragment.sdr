#version 130

in vec2 vs_texUV;
in vec4 world_pos;
in vec4 vs_normal;
in vec4 vs_tangent;
in float vs_gloss;

uniform sampler2D texSampler;
uniform sampler2D specSampler;
uniform sampler2D bumpSampler;
uniform vec4 light_pos;

out vec4 color;

vec3 light(vec4 objPosition, vec4 objNormal, float gloss, vec3 specularColor, vec3 diffuseColor);

void main(void) {
    mat3 normalXform;

    normalXform[0] = normalize(vs_tangent.xyz);
    normalXform[2] = normalize(vs_normal.xyz);
    normalXform[1] = cross( normalXform[2], normalXform[0] );

    vec4 specColor = texture(specSampler, vs_texUV);
    vec4 diffuseColor = texture(texSampler, vs_texUV);
    vec3 mapNormal = texture(bumpSampler, vs_texUV).rgb;

    mapNormal = normalize( (mapNormal - 0.5) * 2.0 );

    vec3 surfNormal = normalXform * mapNormal;

    vec3 lightValue = light(world_pos, vec4(surfNormal, 0.0), 1.0, specColor.rgb, diffuseColor.rgb);

    color = vec4( lightValue, 1.0);
}
